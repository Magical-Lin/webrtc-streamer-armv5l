name: linux-cross-armv5

on: [push]

jobs:
  build:
    strategy:
      matrix:
        buildtype: [Debug, Release]

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: pkg
      run: | 
        sudo apt-get update 
        sudo apt-get install -y --no-install-recommends g++ autoconf automake libtool xz-utils libasound2-dev libpulse-dev libgtk-3-dev cmake p7zip-full
        mkdir /arm-toolchain
        wget https://toolchains.bootlin.com/downloads/releases/toolchains/armv5-eabi/tarballs/armv5-eabi--glibc--stable-2024.02-1.tar.bz2
        tar -xjf /arm-toolchain/armv5-eabi--glibc--stable-2024.02-1.tar.bz2 -C /arm-toolchain/

    - name: depot_tools
      run: |
          git clone --depth 1 https://chromium.googlesource.com/chromium/tools/depot_tools.git
          echo "$(pwd)/depot_tools" >> $GITHUB_PATH

    - name: fetch webrtc
      run: |
          export PATH=/arm-toolchain/armv5-eabi--uclibc--stable-2017.05-toolchains-1-1/armv5-eabi--uclibc--stable/bin:$PATH
          mkdir webrtc
          pushd webrtc
          fetch --no-history --nohooks webrtc
          ./src/build/linux/sysroot_scripts/install-sysroot.py --arch=arm
          sed -i -e "s|'src/resources'],|'src/resources'],'condition':'rtc_include_tests==true',|" src/DEPS 
          gclient sync 
          popd

    - name: build
      run: |
          export PATH=/arm-toolchain/armv5-eabi--uclibc--stable-2017.05-toolchains-1-1/armv5-eabi--uclibc--stable/bin:$PATH
          cmake -DWEBRTCROOT=$(pwd)/webrtc -DCMAKE_BUILD_TYPE=${{ matrix.buildtype }} -DCMAKE_SYSTEM_PROCESSOR=arm64 -DCMAKE_SYSTEM_NAME=Linux -DCMAKE_C_COMPILER=arm-linux-gnueabi-gcc -DCMAKE_CXX_COMPILER=arm-linux-gnueabi-g++ -DCMAKE_FIND_ROOT_PATH_MODE_PROGRAM=NEVER -DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY -DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=ONLY -DCMAKE_FIND_ROOT_PATH_MODE_PACKAGE=ONLY -DWEBRTCDESKTOPCAPTURE=OFF .
          make VERBOSE=1

    - name: cpack 
      run: | 
          rm -f *.tar.gz
          cpack
          echo "artifactPath=$(ls *.tar.gz)" >> $GITHUB_ENV

    - uses: actions/upload-artifact@v3
      with:
        name: ${{ env.artifactPath }}
        path: ${{ env.artifactPath }}   

    - name: Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{ env.artifactPath }}
